name: 'Workflow - Deploy on multi-account AWS with Terraform'
on:
  # trigger/start job when push happens to any of specified branches
  push:
    branches:
    - main
    # - staging
# required permissions by GitHub Actions for assuming AWS IAM role
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
env:
  AWS_REGION: "us-east-1"
  ENVIRONMENT_STAGE: "dev"
  TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET }}
  IAM_ROLE: ${{ vars.IAM_ROLE }}
  createdFromMain: ${{ github.ref == 'refs/heads/main' }}

jobs:
  deploy-terraform:
    runs-on: ubuntu-latest
    # default settings to apply for all the steps
    defaults:
      run:
        working-directory: ./eks-cluster
        shell: bash
    # environment: ${{ (github.ref == 'refs/heads/main' && 'production') || (github.ref == 'refs/heads/staging' && 'staging') || 'dev' }}
    # since production and staging are not ready, deploy only to dev for now
    environment: dev
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # equivalent of "git clone repo"
      - uses: actions/checkout@v4

      # login to AWS
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.IAM_ROLE }}
          role-session-name: project
          aws-region: ${{ env.AWS_REGION }}
      
      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0
          
      - name: Check Terraform version
        run: terraform -v


      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Initialize Terraform
        run: terraform init -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" 

      - name: Format Check or Lint Test
        run: terraform fmt -check

      - name: Plan Infrastructure
        run: terraform plan 

      - name: Deploy infrastructure
        run: terraform apply -auto-approve 
